import pyxel as px
import random
ix, iy = [10, 20, 40, 60, 80], [50, 20, 40, 10, 30] # posição dos inimigos
tx, ty = [], [] # posição dos tiros
x, y = 50, 95 # posição do gatoleiro
# teste de colisão entre o ponto (x1, y1) e o círculo (x2, y2, r2)
def hit_point_circle(x1, y1, x2, y2, r2):
    return (x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2) <= r2 * r2
def update():
    global x, y
    dx = dy = 0 # deslocamento, permite mais de uma tecla pressionada
    if px.btn(px.KEY_LEFT):
        dx = dx - 2
    if px.btn(px.KEY_RIGHT):
        dx = dx + 2
    if px.btn(px.KEY_UP):
        dy = dy - 2
    if px.btn(px.KEY_DOWN):
        dy = dy + 2
    x = x + dx
    y = y + dy
    if px.btnp(px.KEY_CTRL): # adiciona novo tiro
        tx.append(x)
        ty.append(y - 7)
    for t in reversed(range(len(tx))): # para cada tiro
        ty[t] = ty[t] - 2
        if ty[t] < 10:
            tx.pop(t) # remove tiro do alto da tela
            ty.pop(t)
            continue
        for i in reversed(range(len(ix))): # para cada inimigo
            if hit_point_circle(tx[t], ty[t], ix[i], iy[i], 4):
                ix.pop(i) # remove inimigo
                iy.pop(i)
                tx.pop(t) # remove tiro
                ty.pop(t)
                break
    if px.pget(x, y) == 5: # se colidiu com parede então desfaz movimento
        x = x - dx
        y = y - dy
def draw():
    px.cls(9) # fundo
    px.tri(x-1, y, x, y-3, x+1, y, 0) # pistoleiro
    px.rect(-3, 0, 5, 110, 5) # parede 1 (e)
    px.rect(98, 0, 10, 110, 5) # parede 2 (d)
    px.rect(0, 98, 100, 10, 5) # parede 3 (b)
    px.rect(0, -8, 100, 10, 5) # parede 4 (d)
    for t in range(len(tx)): # para cada tiro
        px.pset(tx[t], ty[t], 14)
    for i in range(len(ix)): # para cada inimigo
        px.circ(ix[i], iy[i], 4, 5)



px.init(100, 100, title='gatoleiro', fps=30)
px.run(update, draw)
